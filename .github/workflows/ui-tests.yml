---
name: UI Tests üß™

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ matrix.targetPlatform }} for AltTester üõ†Ô∏è
    runs-on: ubuntu-latest-8-cores
    strategy:
      fail-fast: false
      matrix:
        include:
          - targetPlatform: StandaloneOSX
            buildMethod: MacBuilder.BuildForAltTester
            buildPath: MacOS
          - targetPlatform: StandaloneWindows64
            buildMethod: WindowsBuilder.BuildForAltTester
            buildPath: Windows64
          - targetPlatform: Android
            buildMethod: MobileBuilder.BuildForAltTester
            buildPath: Android
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('sample/Assets/**', 'sample/Packages/**', 'sample/ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}
            Library-
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: sample
          buildMethod: ${{ matrix.buildMethod }}
          customParameters: -logFile logFile.log -quit -batchmode
      - name: List build directory
        run: ls -R sample/Builds/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: sample/Builds/${{ matrix.buildPath }}
  test:
    name: Run ${{ matrix.targetPlatform }} UI tests üß™
    needs: build
    strategy:
      matrix:
        include:
          - targetPlatform: StandaloneOSX
            runs-on: [self-hosted, macOS]
            test_script: ./test_mac.sh
          - targetPlatform: StandaloneWindows64
            runs-on: [self-hosted, windows]
            test_script: ./test_windows.ps1
          - targetPlatform: Android
            runs-on: [ self-hosted, macOS ]
            test_script: browserstack-sdk pytest -s ./test/test_android.py
    concurrency:
      group: test-${{ matrix.targetPlatform }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/download-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: sample/Tests
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install -r "sample/Tests/requirements.txt"
      - name: Run UI tests
        env:
          UNITY_APP_PATH: SampleApp.app
          UNITY_APP_NAME: SampleApp
          MAILSLURP_API_KEY: ${{ secrets.MAILSLURP_API_KEY }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        run: |
          pwd
          ls -la
          cd sample/Tests
          ./${{ matrix.test_script }}
      