/*
 * TS SDK API
 *
 * running ts sdk as an api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Immutable.Orderbook.Model
{
    /// <summary>
    ///     The response body returned from get balance endpoint
    /// </summary>
    [DataContract(Name = "tokenBalance_200_response")]
    public class TokenBalance200Response
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="TokenBalance200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TokenBalance200Response()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="TokenBalance200Response" /> class.
        /// </summary>
        /// <param name="quantity">quantity (required).</param>
        public TokenBalance200Response(string quantity = default)
        {
            // to ensure "quantity" is required (not null)
            if (quantity == null)
                throw new ArgumentNullException(
                    "quantity is a required property for TokenBalance200Response and cannot be null");
            Quantity = quantity;
        }

        /// <summary>
        ///     Gets or Sets Quantity
        /// </summary>
        [DataMember(Name = "quantity", IsRequired = true, EmitDefaultValue = true)]
        public string Quantity { get; set; }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TokenBalance200Response {\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }
}